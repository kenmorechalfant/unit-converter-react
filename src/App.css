:root {
  /* #COLOR VARIABLES */
  --purple-light: #b09ed6;
  --purple-medium: #43316a;
  --purple-dark: #25134b;
  --soft-yellow: #e6b736;
  --soft-red: #f24f59;
  --soft-indigo: #6f7dff;
  --bright-yellow: #ffcc3f;
  --cool-gray-light: #e9e6ef;

  /* #LIGHT MODE */

  --header-color: var(--cool-gray-light);
  --bg-color: white;
  --accent-color-1: var(--soft-indigo);
  --accent-color-2: var(--bright-yellow);
  --text-color: var(--purple-dark);

  --input-color: var(--cool-gray-light);
  --input-text-color: var(--text-color);
  --output-color: transparent;
  --output-text-color: var(--text-color);

  --btn-color: var(--cool-gray-light);
}

  /* #DARK MODE */

@media (prefers-color-scheme: dark) {
  :root {
    --header-color: var(--purple-dark);
    --bg-color: var(--purple-medium);
    --accent-color-1: var(--soft-red);
    --accent-color-2: var(--soft-yellow);
    --text-color: white;

    --input-color: white;
    --input-text-color: var(--purple-dark);
    --output-color: transparent;
    --output-text-color: var(--text-color);

    --btn-color: var(--purple-dark);
  }
}

* {
  box-sizing: border-box;
}

.App {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  margin: 0;
  background-color: var(--bg-color);
  color: var(--text-color);
  font-size: 4vh;
}

.App,
.App input, 
.App button {
  font-family: 'Poppins', 'Lato', 'Roboto', sans-serif;
}

.App a {
  color: inherit;
}

.Header {
  background-color: var(--header-color);
  padding: 1em;
}

.Header h1 {
  margin: 0;
  font-size: .75em;
  line-height: 1em;
  text-transform: lowercase;
  font-weight: 400;
}

.Header h1 svg {
  vertical-align: middle;
  color: var(--accent-color-1);
  transform: scale(1.5);
  margin-right: .5em;
}

.Colophon {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  padding: 0 1em;
}

.Colophon a {
  flex-grow: 1;
  font-size: .5em;
  line-height: 1;
  font-weight: 900;
  text-decoration: none;
  color: var(--btn-color);
  padding: 1.5em 1em;
  text-align: center;
}

.Colophon a:hover,
.Colophon a:focus,
.Colophon a:active {
  color: var(--accent-color-1);
  text-decoration: wavy;
}

.Colophon a:hover,
.Colophon a:focus,
.Colophon a:active {
  opacity: 1;
}

@media (min-width: 500px) {
  .App {
    width: auto;
    height: 90vh;
    justify-content: unset;
    aspect-ratio: 1 / 1.75;

    overflow: hidden;

    margin: 0 auto;
    border-radius: 1rem;
  }

  .Header {
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
  }
}

/* ----------- */

.Button {
  background-color: var(--btn-color);
  color: var(--text-color);
  border: none;
  border-radius: 2vh;
  font-size: 1em;
  line-height: 1;
  font-weight: 900;
}

/* ----------- */

.UnitConverter,
.UnitConverter__Display,
.UnitConverter__Numpad {
  display: grid;
  gap: .5em;
}

.UnitConverter {
  overflow: hidden;
  padding: .5em;
  padding-bottom: 0;
  grid-template-rows: 2fr 4fr;
}

@media (min-width: 500px) {
  .UnitConverter {
    padding: 1em;
    padding-bottom: 0;
  }
}

.UnitConverter__Input {
  min-width: 0; /* Required so increasing font-size doesn't increase input width */
  border-radius: 2vh;
  font-size: 1.75em;
  font-weight: 900;
  text-align: right;
  padding: 0 .25em;
  border: none;
  background-color: var(--input-color);
  color: var(--input-text-color);
}

.UnitConverter__Input[readonly] {
  background-color: var(--output-color);
  color: var(--output-text-color);
}

.UnitConverter__Display {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 1fr 1fr;
  grid-template-areas: 
    "input input input inType"
    "output output output outType";
}

[name="inType"],
[name="outType"] {
  background-color: var(--accent-color-1);
}

[name="unitTypeSwap"] {
  display: grid;
  place-content: center;
  background-color: var(--accent-color-2);
}

[name="unitTypeSwap"] > svg {
  display: grid;
  place-content: center;
  transform: scale(1.75);
}

[name="inValue"] { grid-area: input; }
[name="inType"] { grid-area: inType; }
[name="outValue"] { grid-area: output; }
[name="outType"] { grid-area: outType; }

.UnitConverter__Numpad {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  grid-template-areas: 
    "seven eight nine typeSwap"
    "four five six clear"
    "one two three clear"
    "zero zero dot backspace";
}

[name="0"] { grid-area: zero; }
[name="1"] { grid-area: one; }
[name="2"] { grid-area: two; }
[name="3"] { grid-area: three; }
[name="4"] { grid-area: four; }
[name="5"] { grid-area: five; }
[name="6"] { grid-area: six; }
[name="7"] { grid-area: seven; }
[name="8"] { grid-area: eight; }
[name="9"] { grid-area: nine; }
[name="period"] { grid-area: dot; }
[name="backspace"] { grid-area: backspace; }
[name="clear"] { grid-area: clear; }
[name="unitTypeSwap"] { grid-area: typeSwap; }